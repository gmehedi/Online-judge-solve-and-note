"str" is input number as string 
"base" is base of input number.

Decimal Equivalent is,
  1*str[len-1] + base*str[len-2] + (base)2*str[len-2] + ...

Decimal to any base
The base of a number system represents the number of symbols it has:
Name	Base	Symbols
Decimal	10	0, 1, 2, 3, 4, 5, 6, 7, 8, 9
Binary	2	0, 1
Hexadecimal	16	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F
Octal	8	0, 1, 2, 3, 4, 5, 6, 7
Positional number systems use exponentiation to determine a symbol's value based 
on its place. We can use this idea to convert from any system into the decimal system:
System	Base	Value	Conversion Formula	Decimal Value
Decimal	10	104	(1 × 102) + (0 × 101) + (4 × 100)	100 + 0 + 4 = 104
Binary	2	111	(1 × 22) + (1 × 21) + (1 × 20)	4 + 2 + 1 = 7
Octal	8	104	(1 × 82) + (0 × 81) + (4 × 80)	64 + 0 + 4 = 68
Hexadecimal	16	FEC	(F × 162) + (E × 161) + (C × 80)	
                15 × 256 + 14 × 16 + 12 × 1 = 3840 + 224 + 12 = 4076

Decimal to Hex converter
Enter decimal number:

10
 Convert   Reset   Swap
Hex number:

16
Hex signed 2's complement:

16
Binary number:

2
Hex to decimal converter ?

How to convert from decimal to hex
Conversion steps:
Divide the number by 16.
Get the integer quotient for the next iteration.
Get the remainder for the hex digit.
Repeat the steps until the quotient is equal to 0.
Example #1
Convert 756210 to hex:

Division
by 16	Quotient	Remainder
(decimal)	Remainder
(hex)	Digit #
7562/16	472	10	A	0
472/16	29	8	8	1
29/16	1	13	D	2
1/16	0	1	1	3
So 756210 = 1D8A16

Example #2
Convert 3563110 to hex:

Division
by 16	Quotient	Remainder
(decimal)	Remainder
(hex)	Digit #
35631/16	2226	15	F	0
2226/16	139	2	2	1
139/16	8	11	B	2
8/16	0	8	8	3
So 3563110 = 8B2F16


long long Any_Base_to_Decimal(long long temp,long long base)
{
    long long power=1;
    long long ans=0;
    while(temp)
    {
        long long t=temp%10;
        ans+=t*power;
        power *=base;
        temp/=10;
    }
    return ans;
}
long long fac(long long temp)
{
    if(temp==0)return 1;
    return temp*fac(temp-1);
}

long long How_many_Zero(long long temp)
{
    long long t=0,f=0;
    while(temp%2==0) temp/=2,t++;
    while(temp%5==0) temp/=5,f++;
    return min(t,f);
}

long long Decimal_to_Any(long long temp, long long base)
{
    vector<long long>v;
    while( temp/base !=0 )
    {
        v.push_back(temp%base);
        temp/=base;
    }
     v.push_back(temp);
    long long ans=0;
    for(int i=(int)v.size()-1; i>=0; i--) ans= (ans*10)+v[i];
    return ans;
}

FINAL AND SIMPLIFY THIS  WE FOUND THE NUMBER OF DIGIT AND NUMBER OF TRAILINGZERO IN N!

long long Digit(long long temp, long long base)
{
    double t=0;
    for(int i=1; i<=temp; i++) t+=log(i)/log(base);
    return floor(t)+1;
}

long long Zero(long long temp,long long base)
{
    long long n=base,mini=INT_MAX,number=temp;
    for(int i=2; i<=n; i++)
    {
        long long cnt=0,fac=0;
       // cout<<"H  "<<i<<"   "<<base%i<<endl;
        if(base%i==0)
        {
            while(base%i==0) cnt++,base/=i;
            long long k=i,d=number;
            //while(d/i>0) fac+=(d/i),d/=i; //also use it for factor
            while( number>=k )fac+=number/k,k*=i;
            mini=min(mini,fac/cnt);
        }
    }
    if(mini==INT_MAX)mini=0;
    return mini;
}

