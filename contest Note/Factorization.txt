bool sign[maxl + 2];
vector<ll>prime;

void Prime()
{
    memset(sign, true, sizeof sign);
    prime.pb(2);
    for(ll i = 3; i * i <= maxl; i += 2){
        if(sign[i]){
            for(ll j = i * i; j <= maxl; j += (i * 2LL)) sign[j] = false;
        }
    }
    for(ll i = 3; i <= maxl; i += 2LL){
        if(sign[i]) prime.pb(i);
    }
}
vector<pii>v[10000000 + 2];

void Factorization(ll num)
{
    ll temp=num,res=1;

    for(int i=0; prime[i] * prime[i] <= temp && i<prime.size(); i++)
    {
        if(v[temp].size() != 0){
            for(auto dd : v[temp]){
                v[num].pb( mk(dd.f, dd.s) );
            }
            return;
        }
        if(prime[i] > temp) break;
        int ans=0;
        while(temp % prime[i] == 0) temp /= prime[i], ans++;
        if(ans > 0) v[num].pb( mk(prime[i], ans) );
    }

    if(temp>1) v[num].pb(mk(temp,1));

}